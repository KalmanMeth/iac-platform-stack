tosca_definitions_version: tosca_simple_yaml_1_3

node_types:

  sodalite.nodes.Configuration:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      dir:
        description: Dir with config file
        type: string
        required: True
      filename:
        description: Filename of target configuration 
        required: True
        type: string
      template_name:
        description: Filename of configuration template
        required: True
        type: string        
      permissions:
        description: File permissions
        required: True
        type: string    
        default: "0777"        
    attributes:
      config_file_path:
        description: Path to conf file on target VM
        type: string

  sodalite.nodes.Configuration.IACBlueprintBuilder:
    derived_from: sodalite.nodes.Configuration
    properties:
      template_name:
        description: Filename of configuration template
        required: True
        type: string   
        default: "iac_blueprint_builder.json.tmpl"
      xopera_endpoint:
        description: URL xOpera REST API
        required: False
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              dir: { default: { get_property: [ SELF, dir ] } }
              filename: { default: { get_property: [ SELF, filename ] } }
              template_name: { default: { get_property: [ SELF, template_name ] } }
              xopera_endpoint: { default: { get_property: [ SELF, xopera_endpoint ] } }
              permissions: { default: { get_property: [ SELF, permissions ] } }
            implementation:
              primary: playbooks/config/create_conf.yml
              dependencies: 
                - artifacts/iac_blueprint_builder.json.tmpl        
                
  sodalite.nodes.Configuration.IDE:
    derived_from: sodalite.nodes.Configuration
    properties:
      template_name:
        description: Filename of configuration template
        required: True
        type: string   
        default: "sodalite.properties.tmpl"
      iac_blueprint_builder_endpoint:
        description: URL IAC blueprint builder API
        required: True
        type: string   
      semantic_web_endpoint:
        description: URL Sematic Web API
        required: True
        type: string   
      xopera_endpoint:
        description: URL xOpera REST API
        required: False
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              dir:                                      { default: { get_property: [ SELF, dir ] } }
              filename:                                 { default: { get_property: [ SELF, filename ] } }
              template_name:                            { default: { get_property: [ SELF, template_name ] } }
              iac_blueprint_builder_endpoint:           { default: { get_property: [ SELF, iac_blueprint_builder_endpoint ] } }
              semantic_web_endpoint:                    { default: { get_property: [ SELF, semantic_web_endpoint ] } }
              xopera_endpoint:                          { default: { get_property: [ SELF, xopera_endpoint ] } }
              permissions:                              { default: { get_property: [ SELF, permissions ] } }
            implementation:
              primary: playbooks/config/create_conf.yml
              dependencies: 
                - artifacts/sodalite.properties.tmpl          

  sodalite.nodes.Configuration.Prometheus:
    derived_from: sodalite.nodes.Configuration
    properties:
      template_name:
        description: Filename of configuration template
        required: True
        type: string   
        default: "prometheus.yml.tmpl"
      os_auth_url:
        description: URL IAC blueprint builder API
        required: True
        type: string   
      os_username:
        description: URL Sematic Web API
        required: True
        type: string   
      os_password:
        description: URL xOpera REST API
        required: False
        type: string
      os_project_id:
        description: URL xOpera REST API
        required: False
        type: string
      os_project_name:
        description: URL xOpera REST API
        required: False
        type: string                
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              dir:                                      { default: { get_property: [ SELF, dir ] } }
              filename:                                 { default: { get_property: [ SELF, filename ] } }
              template_name:                            { default: { get_property: [ SELF, template_name ] } }
              os_auth_url:                              { default: { get_property: [ SELF, os_auth_url ] } }
              os_username:                              { default: { get_property: [ SELF, os_username ] } }
              os_password:                              { default: { get_property: [ SELF, os_password ] } }
              os_project_id:                            { default: { get_property: [ SELF, os_project_id ] } }
              os_project_name:                          { default: { get_property: [ SELF, os_project_name ] } }
              permissions:                              { default: { get_property: [ SELF, permissions ] } }
            implementation:
              primary: playbooks/config/create_conf.yml
              dependencies: 
                - artifacts/prometheus.yml.tmpl                   

  sodalite.nodes.ConfigureKeys:
    derived_from: tosca.nodes.SoftwareComponent
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:      
            inputs:
              public_ipv4_address: { default: { get_attribute: [ SELF, host, public_address ] } }
            implementation:
              primary: playbooks/ssh-key/create.yml
          delete: 
            implementation:
              primary: playbooks/ssh-key/delete.yml

  sodalite.nodes.ConfigureOpera:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      blueprint_path:
        description: Absolute path of SODALITE blueprint folder
        required: True
        type: string   
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:      
            inputs:
              blueprint_path:           { default: { get_property: [ SELF, blueprint_path ] } } 
              ansible_user:             { default: { get_property: [ SELF, host, username ] } } 
            implementation:
              primary: playbooks/opera/configure.yml
          